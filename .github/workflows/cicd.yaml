name: CI/CD pipeline

on:
  push: 

  pull_request:
    types: [closed]
    branches:
      - master
    
jobs:

  build-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # - name: docker build
      #   run: |
      #     docker build -t davejfranco/oci-action-api .
      - name: Upload package.json
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: package.json
          retention-days: 1

      - uses: tonynguyenit18/github-action-custom-vars@v1
      - run: echo $RECENT_MERGED_BRANCH_NAME > branch.txt

      - name: Upload source branch #This will identify is the source branch is release, and will trigger both automatice release and prod deployment
        uses: actions/upload-artifact@v2
        with:
          name: branch
          path: branch.txt
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build-code
    steps:

      - name: Download branch file
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Download branch file
        uses: actions/download-artifact@v2
        with:
          name: branch

      - name: Check if release
        id: is_release
        if: github.ref == 'refs/heads/main'
        run: |
          echo $(cat branch.txt)
          if [[ $(cat branch.txt) == *"release"* ]]; then
            echo ""::set-output name=release::true"
          else
             echo ""::set-output name=release::false"
          fi

      - run: echo "${{ steps.is_release.outputs.release }}" 
      
      - name: Get Release version
        id: version
        if: steps.is_release.outputs.release == 'true'
        run: |
          VERSION=$(cat package.json | jq -r .version)
          echo ::set-output name=version::$VERSION

      - name: Create tag
        if: steps.is_release.outputs.release == 'true'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.version.outputs.version }}",
              sha: context.sha
            })

      - name: Create a GitHub release
        if: steps.version.outputs.version
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.version.outputs.version }}"
          token: ${{ secrets.GITHUB_TOKEN }}
      
  # prod_deployment:
  #   needs: release
  #   runs-on: ubuntu-latest
  #   steps:

  #     - name: Get Release version
  #       id: release_version
  #       if: github.ref == 'refs/heads/main'
  #       run: |
  #         if [[ $RECENT_MERGED_BRANCH_NAME =~ "release" ]]; then
  #           export RELEASE_VERSION=$(echo $RECENT_MERGED_BRANCH_NAME | cut -d'/' -f2)
  #           echo ::set-output name=version::$RELEASE_VERSION
  #         fi

  #     - name: Deploy
  #       id: deploy_prod
  #       if: steps.release_version.outputs.version
  #       run: echo "This is a deployment"
  
    

