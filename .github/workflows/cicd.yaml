name: CI/CD pipeline

on:
  push: 
    branches:
      - release/*
      - main
  pull_request:
    branches: 
      - main
    types: [closed]

jobs:

  release:
    runs-on: ubuntu-latest
    steps: 
      - name: Get Release version
        if: startsWith(github.ref, 'refs/heads/release')
        run: |
          echo "RELEASE_VERSION=$(echo ${GITHUB_HEAD_REF} | cut -d'/' -f4)" >> $GITHUB_ENV
          echo $RELEASE_VERSION

      - name: Create tag
        if: github.event.pull_request.merged #== true && startsWith(github.event.pull_request.head.ref, 'release')
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${RELEASE_VERSION}",
              sha: context.sha
            })

      - name: Create a GitHub release
        if: github.event.pull_request.merged
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${RELEASE_VERSION}"
          release_name: Release ${RELEASE_VERSION}"

  #comment
  # build-docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
      
  #     - name: docker build
  #       run: |
  #         docker build -t davejfranco/oci-action-api .
    
    # - name: Print release
    #   run: |
    #     echo $RELEASE_VERSION
    #     echo ${{ env.RELEASE_VERSION }}
    

