name: CI/CD pipeline

on:
  push: 
    branches:
      - main   
  pull_request:
    types: [closed]
    branches:
      - master
    
jobs:

  # build-docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
      
  #     - name: docker build
  #       run: |
  #         docker build -t davejfranco/oci-action-api .

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: tonynguyenit18/github-action-custom-vars@v1
      - run: echo $RECENT_MERGED_BRANCH_NAME

      - run: echo $RECENT_MERGED_BRANCH_NAME

      - name: Get Release version
        id: release_version
        if: github.ref == 'refs/heads/main'
        run: |

          if [[ $RECENT_MERGED_BRANCH_NAME =~ "release" ]]; then
            export RELEASE_VERSION=$(echo $RECENT_MERGED_BRANCH_NAME | cut -d'/' -f2)
            echo ::set-output name=version::$RELEASE_VERSION #echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
            echo "$RELEASE_VERSION"
          fi

      - name: Create tag
        if: steps.release_version.outputs.version
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.release_version.outputs.version }}",
              sha: context.sha
            })

      - name: Create a GitHub release
        if: steps.release_version.outputs.version
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.release_version.outputs.version }}"
          token: ${{ secrets.GITHUB_TOKEN }}
      
  prod_deployment:
    needs: release
    runs-on: ubuntu-latest
    steps:

      - name: print ref 
        run: |
          echo "${{ github.ref }}"



  
    

